{"version":3,"file":"js/891.a6e58693.js","mappings":"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","sources":["webpack://for_the_andraste/./src/components/01_kirkwall_harbor/CO_01_2_kirkwall.vue","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/puzzle/mazeRoom.vue","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/puzzle/getMaze.js","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/puzzle/getMaze2.js","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/puzzle/Renderer.js","webpack://for_the_andraste/src/components/01_kirkwall_harbor/puzzle/mazeRoom.vue","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/puzzle/mazeRoom.vue?f309","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/puzzle/mazeRoom.vue?a10c","webpack://for_the_andraste/src/components/01_kirkwall_harbor/CO_01_2_kirkwall.vue","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/CO_01_2_kirkwall.vue?0127","webpack://for_the_andraste/./src/components/01_kirkwall_harbor/CO_01_2_kirkwall.vue?868d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"topImage kirkwall\"}),_c('div',{staticClass:\"content\"},[_vm._m(0),_vm._m(1),_c('div',{staticClass:\"puzzle mt70\"},[_c('div',{staticClass:\"maze-container\"},[_c('maze',{style:(_vm.mazeStyle),attrs:{\"strategy\":_vm.strategy,\"difficulty\":_vm.difficulty},on:{\"start\":_vm.onStart,\"finish\":_vm.onFinish,\"init\":_vm.onInit}})],1)])]),_c('transition',[_c('div',{staticClass:\"content\",class:{ hide: !_vm.showButton }},[_c('p',{staticClass:\"content-text\"},[_vm._v(\" 커크월 전반에 걸쳐 흩어진 무너진 건물의 파편.\"),_c('br'),_vm._v(\" 화마가 휩쓸고 지나간 잿더미들.\"),_c('br'),_vm._v(\" 아직 수습되지 못한 시신들.\"),_c('br'),_c('br'),_vm._v(\"한차례 이곳을 휩쓸고 지나갔을 울음와 비명소리는 소름끼치는 적막 너머에 새겨져 있었다.\"),_c('br'),_vm._v(\"매캐한 연기의 냄새가 아직도 공기 중에 흐릿하게 남아있었다. \"),_c('br'),_vm._v(\"한 차례 비가 왔었는지 바닥은 축축하고 질척거렸다. \")]),_c('div',{staticClass:\"content-button mt70\"},[_c('button',{on:{\"click\":_vm.checkPath}},[_vm._v(\"챈트리로 향한다.\")])])])]),_c('div',{staticClass:\"bottomImage\"})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"content-text mt26\"},[_vm._v(\" 커크월에 도착한 수많은 템플러들은 커크월을 뒤덮은 커다란 혼란과 절망 앞에 말을 잃었다. \"),_c('br'),_vm._v(\"과장되었을 것이라고 생각했던 소문은, 오히려 과소평가된 비극이었던 것이다. \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"content-dialog\"},[_c('ul',[_c('li',[_c('div',{staticClass:\"content-dialog-portrait\"}),_c('div',{staticClass:\"content-dialog-text\"},[_vm._v(\" 우선 챈트리 쪽으로 가도록 하지. 지도는 갖고 있나? \")])]),_c('li',[_c('div',{staticClass:\"content-dialog-portrait\"}),_c('div',{staticClass:\"content-dialog-text\"},[_vm._v(\"예. 챙겨두었습니다.\")])])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('button',{staticClass:\"mazeBtn\",on:{\"click\":_vm.resetMaze}},[_vm._v(\"미로 다시 만들기\")]),_c('div',{staticClass:\"maze\",attrs:{\"tabindex\":\"-1\"},on:{\"keyup\":_vm.onKeyUp}},[_c('canvas',{ref:\"mazeCanvas\",attrs:{\"width\":_vm.width,\"height\":_vm.height}}),_c('canvas',{ref:\"goalCanvas\",style:(_vm.goalStyle),attrs:{\"width\":_vm.width,\"height\":_vm.height}}),_c('canvas',{ref:\"effectCanvas\",style:(_vm.playerStyle),attrs:{\"width\":_vm.width,\"height\":_vm.height}}),_c('canvas',{ref:\"playerCanvas\",style:(_vm.playerStyle),attrs:{\"width\":_vm.width,\"height\":_vm.height},on:{\"touchstart\":_vm.onTouchStart,\"touchmove\":_vm.onTouchMove,\"touchend\":_vm.onTouchEnd,\"mousemove\":_vm.onMouseMove}}),(_vm.cache)?_c('div',{style:(_vm.dotStyle)}):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class Maze {\n  constructor(lx, ly) {\n    const bondHSize = (lx + 1) * ly;\n    const bondVSize = lx * (ly + 1);\n    const pointSize = lx * ly;\n\n    const bondH = new Array(bondHSize);\n    for (let i = 0; i < bondH.length; i++) {\n      bondH[i] = false;\n    }\n    const bondV = new Array(bondVSize);\n    for (let i = 0; i < bondV.length; i++) {\n      bondV[i] = false;\n    }\n    const point = new Array(pointSize);\n    for (let i = 0; i < point.length; i++) {\n      point[i] = i;\n    }\n\n    this.lx = lx;\n    this.ly = ly;\n    this.bondH = bondH;\n    this.bondV = bondV;\n    this.point = point;\n    this.goal = {\n      x: this.lx - 1,\n      y: this.ly - 1,\n    };\n\n    this.makeMaze();\n  }\n\n  getClusterIndex(x, y) {\n    let index = this.lx * y + x;\n    while (index !== this.point[index]) {\n      index = this.point[index];\n    }\n    return index;\n  }\n\n  connect(ix1, iy1, ix2, iy2) {\n    const i1 = this.getClusterIndex(ix1, iy1);\n    const i2 = this.getClusterIndex(ix2, iy2);\n    if (i1 < i2) {\n      this.point[i2] = i1;\n    } else {\n      this.point[i1] = i2;\n    }\n  }\n\n  makeMazeSub(rate) {\n    // make path horizontally\n    for (let iy = 0; iy < this.ly; iy++) {\n      for (let ix = 0; ix < this.lx - 1; ix++) {\n        const rand = Math.random();\n        if (\n          rand < rate ||\n          this.getClusterIndex(ix, iy) === this.getClusterIndex(ix + 1, iy)\n        ) {\n          continue;\n        }\n        this.bondH[this.lx * iy + iy + ix + 1] = true;\n        this.connect(ix, iy, ix + 1, iy);\n      }\n    }\n\n    // make path vertically\n    for (let iy = 0; iy < this.ly - 1; iy++) {\n      for (let ix = 0; ix < this.lx; ix++) {\n        const rand = Math.random();\n        if (\n          rand < rate ||\n          this.getClusterIndex(ix, iy) === this.getClusterIndex(ix, iy + 1)\n        ) {\n          continue;\n        }\n        this.bondV[(iy + 1) * this.lx + ix] = true;\n        this.connect(ix, iy, ix, iy + 1);\n      }\n    }\n    return;\n  }\n\n  makeMaze() {\n    for (let i = 0; i < 10; i++) {\n      this.makeMazeSub(0.8);\n    }\n\n    // definitely connect unconnected clusters\n    this.makeMazeSub(1.0);\n\n    // open start and goal\n    this.bondH[0] = true;\n    this.bondH[(this.lx + 1) * this.ly - 1] = true;\n    this.goal = {\n      x: this.lx - 1,\n      y: this.ly - 1,\n    };\n    return;\n  }\n}\n\nexport default Maze;\n","class Maze {\n  constructor(lx, ly) {\n    const bondHSize = (lx + 1) * ly;\n    const bondVSize = lx * (ly + 1);\n    const pointSize = lx * ly;\n\n    const bondH = new Array(bondHSize);\n    for (let i = 0; i < bondH.length; i++) {\n      bondH[i] = false;\n    }\n    const bondV = new Array(bondVSize);\n    for (let i = 0; i < bondV.length; i++) {\n      bondV[i] = false;\n    }\n    const isOpenArr = new Array(pointSize);\n    for (let i = 0; i < pointSize; i++) {\n      isOpenArr[i] = false;\n    }\n\n    this.lx = lx;\n    this.ly = ly;\n    this.bondH = bondH;\n    this.bondV = bondV;\n    this.isOpenArr = isOpenArr;\n\n    this.makeMaze();\n    this.goal = {\n      x: this.lx - 1,\n      y: this.ly - 1,\n    };\n  }\n\n  makeMaze() {\n    const cells = [];\n    cells.push(Math.floor(Math.random() * this.isOpenArr.length));\n\n    while (cells.length > 0) {\n      const c = cells.pop();\n      if (c == null) {\n        break;\n      }\n      const ix = c % this.lx;\n      const iy = Math.floor(c / this.lx);\n      this.isOpenArr[c] = true;\n      const direction = this.getDirectionCandidate(ix, iy);\n      if (this.isDeadEnd(direction)) {\n        continue;\n      }\n      cells.push(c);\n      const dest = this.getNeighbor(ix, iy, this.getRandomDirection(direction));\n      cells.push(dest.iy * this.lx + dest.ix);\n    }\n\n    this.bondH[0] = true;\n    this.bondH[(this.lx + 1) * this.ly - 1] = true;\n    return;\n  }\n\n  isDeadEnd(direction) {\n    return (\n      direction.north === 0 &&\n      direction.south === 0 &&\n      direction.west === 0 &&\n      direction.east === 0\n    );\n  }\n\n  isOpen(x, y) {\n    return this.isOpenArr[y * this.lx + x];\n  }\n\n  getDirectionCandidate(ix, iy) {\n    const north = iy > 0 && !this.isOpen(ix, iy - 1);\n    const south = iy < this.ly - 1 && !this.isOpen(ix, iy + 1);\n    const west = ix > 0 && !this.isOpen(ix - 1, iy);\n    const east = ix < this.lx - 1 && !this.isOpen(ix + 1, iy);\n    const directionNo = [north, south, west, east].filter((i) => i).length;\n    const probability = directionNo > 0 ? 1.0 / directionNo : 0;\n    return {\n      north: north ? probability : 0,\n      south: south ? probability : 0,\n      west: west ? probability : 0,\n      east: east ? probability : 0,\n    };\n  }\n\n  getRandomDirection(direction) {\n    const sum =\n      direction.north + direction.south + direction.west + direction.east;\n    if (sum === 0) {\n      throw new Error(\"No direction available\");\n    }\n    const i = Math.random() * sum;\n    let n = 0;\n    for (const k in direction) {\n      const p = direction[k];\n      n += p;\n      if (i < n) {\n        return k;\n      }\n    }\n    throw new Error(\"Something wrong\");\n  }\n\n  getNeighbor(ix, iy, direction) {\n    const dest = { ix, iy };\n    switch (direction) {\n      case \"north\":\n        dest.iy -= 1;\n        this.bondV[iy * this.lx + ix] = true;\n        break;\n      case \"south\":\n        dest.iy += 1;\n        this.bondV[(iy + 1) * this.lx + ix] = true;\n        break;\n      case \"east\":\n        dest.ix += 1;\n        this.bondH[iy * (this.lx + 1) + ix + 1] = true;\n        break;\n      case \"west\":\n        dest.ix -= 1;\n        this.bondH[iy * (this.lx + 1) + ix] = true;\n        break;\n      default:\n        throw new Error(\"Something wrong\");\n    }\n    return dest;\n  }\n}\n\nexport default Maze;\n","class Renderer {\n  constructor(ctx, unitWidth, unitHeight, offsetLeft, offsetTop) {\n    this.ctx = ctx;\n    this.unitWidth = unitWidth;\n    this.unitHeight = unitHeight;\n    this.offsetLeft = offsetLeft;\n    this.offsetTop = offsetTop;\n    this.wallWidth = 2;\n  }\n\n  clear(w, h) {\n    this.ctx.clearRect(0, 0, w, h);\n  }\n\n  setColor(fill, stroke) {\n    this.ctx.fillStyle = fill;\n    this.ctx.strokeStyle = stroke;\n  }\n\n  beginPath() {\n    this.ctx.beginPath();\n  }\n\n  stroke() {\n    this.ctx.stroke();\n  }\n\n  drawImage(x, y, image) {\n    const scaleX = this.unitWidth / image.width;\n    const scaleY = this.unitHeight / image.height;\n    const cx = (x * this.unitWidth) / scaleX + this.offsetLeft / scaleX;\n    const cy = (y * this.unitHeight) / scaleY + this.offsetTop / scaleY;\n    this.ctx.save();\n    this.ctx.scale(scaleX, scaleY);\n    this.ctx.imageSmoothingEnabled = false;\n    this.ctx.drawImage(image, cx, cy);\n    this.ctx.restore();\n  }\n\n  drawCircle(x, y, r) {\n    this.ctx.beginPath();\n    const cx = x * this.unitWidth + this.unitWidth / 2 + this.offsetLeft;\n    const cy = y * this.unitHeight + this.unitHeight / 2 + this.offsetTop;\n    r =\n      r != null\n        ? r\n        : Math.min(this.unitWidth, this.unitHeight) / 2 - this.wallWidth;\n    this.ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n    this.ctx.fill();\n    this.ctx.stroke();\n  }\n\n  drawLine(x1, y1, x2, y2) {\n    const fromX = this.offsetLeft + x1 * this.unitWidth;\n    const fromY = this.offsetTop + y1 * this.unitHeight;\n    const toX = this.offsetLeft + x2 * this.unitWidth;\n    const toY = this.offsetTop + y2 * this.unitHeight;\n    this.ctx.moveTo(fromX, fromY);\n    this.ctx.lineTo(toX, toY);\n  }\n\n  drawText(text, x, y) {\n    const left = x * this.unitWidth + this.offsetLeft;\n    const top = y * this.unitHeight + this.offsetTop;\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillText(text, left, top);\n  }\n}\n\nexport default Renderer;\n","<template>\n  <div>\n    <button @click=\"resetMaze\" class=\"mazeBtn\">미로 다시 만들기</button>\n    <div class=\"maze\" tabindex=\"-1\" @keyup=\"onKeyUp\">\n      <canvas ref=\"mazeCanvas\" :width=\"width\" :height=\"height\"></canvas>\n      <canvas\n        ref=\"goalCanvas\"\n        :style=\"goalStyle\"\n        :width=\"width\"\n        :height=\"height\"\n      ></canvas>\n      <canvas\n        ref=\"effectCanvas\"\n        :width=\"width\"\n        :height=\"height\"\n        :style=\"playerStyle\"\n      ></canvas>\n      <!-- :style=\"effectStyle\" -->\n      <canvas\n        ref=\"playerCanvas\"\n        :width=\"width\"\n        :height=\"height\"\n        @touchstart=\"onTouchStart\"\n        :style=\"playerStyle\"\n        @touchmove=\"onTouchMove\"\n        @touchend=\"onTouchEnd\"\n        @mousemove=\"onMouseMove\"\n      ></canvas>\n      <div v-if=\"cache\" :style=\"dotStyle\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport Maze from \"./getMaze\";\nimport Maze2 from \"./getMaze2\";\nimport imagePath from \"@/assets/01_kirkwall_harbor/me.png\";\nimport goalImagePath from \"@/assets/01_kirkwall_harbor/me.png\";\nimport Renderer from \"./Renderer\";\n\n// TODO: select strategy method, not a class\nconst strategy = {\n  dig: Maze2,\n  cluster: Maze,\n};\n\nexport default {\n  data() {\n    return {\n      cache: null,\n      dotPos: {\n        offsetX: null,\n        offsetY: null,\n      },\n      width: null,\n      height: null,\n      margin: 5,\n      image: null,\n      goalImage: null,\n      maze: {\n        bondH: [],\n        bondV: [],\n        goal: {\n          x: null,\n          y: null,\n        },\n      },\n      player: {\n        id: \"00\",\n        x: 0,\n        y: 0,\n      },\n      isFinished: false,\n      seed: Date.now(),\n    };\n  },\n  props: {\n    difficulty: {\n      default: \"normal\",\n      type: String,\n    },\n    imagePath: {\n      default: imagePath,\n      type: String,\n    },\n    goalImagePath: {\n      default: goalImagePath,\n      type: String,\n    },\n    strategy: {\n      default: \"cluster\",\n      type: String,\n    },\n  },\n  computed: {\n    marginTop() {\n      return (this.height - this.ly * this.cellHeight) / 2;\n    },\n    marginLeft() {\n      return (this.width - this.lx * this.cellWidth) / 2;\n    },\n    cellWidth() {\n      switch (this.difficulty) {\n        case \"easy\":\n          return 50;\n        case \"hard\":\n          return 10;\n        default:\n          return 20;\n      }\n    },\n    cellHeight() {\n      switch (this.difficulty) {\n        case \"easy\":\n          return 50;\n        case \"hard\":\n          return 10;\n        default:\n          return 20;\n      }\n    },\n    lx() {\n      return Math.max(\n        1,\n        Math.floor((this.width - this.margin * 2) / this.cellWidth)\n      );\n    },\n    ly() {\n      return Math.max(\n        1,\n        Math.floor((this.height - this.margin * 2) / this.cellHeight)\n      );\n    },\n    goalStyle() {\n      if (this.isFinished) {\n        return {\n          opacity: 0,\n        };\n      }\n      return {\n        display: \"inline\",\n        position: \"relative\",\n        top: \"-365px\",\n        opacity: 0.5,\n      };\n    },\n    // effectStyle() {\n    //   if (this.isFinished) {\n    //     return {\n    //       display: \"inline\",\n    //       position: \"relative\",\n    //       top: \"-720px\",\n    //     };\n    //   }\n    //   return {\n    //     display: \"none\",\n    //   };\n    // },\n    playerStyle() {\n      return {\n        display: \"inline\",\n        position: \"relative\",\n        top: \"-1100px\",\n      };\n    },\n    dotStyle() {\n      return {\n        position: \"absolute\",\n        backgroundColor: \"black\",\n        height: \"5px\",\n        width: \"5px\",\n        opacity: 0.5,\n        borderRadius: \"50%\",\n        top: this.dotPos.offsetY + \"px\",\n        left: this.dotPos.offsetX + \"px\",\n        border: \"5px solid red\",\n      };\n    },\n  },\n  mounted() {\n    this.height = this.$el.offsetHeight - this.margin;\n    this.width = this.$el.offsetWidth - this.margin;\n\n    const image = new Image();\n    image.addEventListener(\"load\", () => {\n      this.image = image;\n    });\n    image.src = this.imagePath;\n\n    const goalImage = new Image();\n    goalImage.addEventListener(\"load\", () => {\n      this.goalImage = goalImage;\n    });\n    goalImage.src = this.goalImagePath;\n\n    window.addEventListener(\"resize\", () => {\n      this.height = this.$el.offsetHeight;\n      this.width = this.$el.offsetWidth;\n    });\n  },\n  watch: {\n    height() {\n      this.renderMaze();\n    },\n    width() {\n      this.renderMaze();\n    },\n    lx() {\n      this.resetMaze();\n    },\n    ly() {\n      this.resetMaze();\n    },\n    maze() {\n      this.$emit(\"init\");\n      this.renderMaze();\n    },\n    player() {\n      this.renderPlayer();\n    },\n    image() {\n      this.renderPlayer();\n    },\n    goalImage() {\n      this.renderGoal();\n    },\n    strategy() {\n      this.$emit(\"init\");\n      this.resetMaze();\n    },\n    isFinished() {\n      if (this.isFinished) {\n        // this.renderConguraturations();\n        // setTimeout(this.resetMaze, 800);\n      }\n    },\n  },\n  methods: {\n    onTouchStart(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      const touch = event.touches[0];\n      this.cache = {};\n      this.cache.rect =\n        this.cache.avatorPosition =\n        this.cache.originalPosition =\n          Vue.set(this, \"cache\", {\n            rect: touch.target.getBoundingClientRect(),\n            avatorPosition: {\n              x:\n                this.player.x * this.cellWidth +\n                this.marginLeft +\n                this.cellWidth / 2,\n              y:\n                this.player.y * this.cellHeight +\n                this.marginTop +\n                this.cellHeight / 2,\n            },\n            originalPosition: {\n              x: touch.clientX,\n              y: touch.clientY,\n            },\n            pos: {\n              offsetX: touch.clientX,\n              offsetY: touch.clientY,\n            },\n          });\n    },\n    onTouchMove(event) {\n      // For preventing \"Pull to refresh\" feature on Android\n      event.preventDefault();\n      event.stopPropagation();\n      const touch = event.touches[0];\n      const avatorPos = this.cache.avatorPosition;\n      const originalPos = this.cache.originalPosition;\n      Vue.set(this, \"dotPos\", {\n        offsetX: touch.clientX - originalPos.x + avatorPos.x,\n        offsetY: touch.clientY - originalPos.y + avatorPos.y,\n      });\n      this.handleMove(this.dotPos);\n    },\n    onTouchEnd(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.cache = null;\n    },\n    onMouseMove(event) {\n      this.handleMove(event);\n    },\n    handleMove(pos) {\n      const offsetX = pos.offsetX;\n      const offsetY = pos.offsetY;\n      const x = Math.floor((offsetX - this.marginLeft) / this.cellWidth);\n      const y = Math.floor((offsetY - this.marginTop) / this.cellHeight);\n      const dx = x - this.player.x;\n      const dy = y - this.player.y;\n      if (Math.abs(dx) + Math.abs(dy) <= 2) {\n        this.moveBy(dx, dy);\n      }\n    },\n    onKeyUp(event) {\n      switch (event.keyCode) {\n        case 37:\n          this.goLeft();\n          break;\n        case 38:\n          this.goUp();\n          break;\n        case 39:\n          this.goRight();\n          break;\n        case 40:\n          this.goDown();\n      }\n    },\n    goUp() {\n      this.moveBy(0, -1);\n    },\n    goDown() {\n      this.moveBy(0, 1);\n    },\n    goLeft() {\n      this.moveBy(-1, 0);\n    },\n    goRight() {\n      this.moveBy(1, 0);\n    },\n    moveBy(dx, dy) {\n      const x = this.player.x + dx;\n      const y = this.player.y + dy;\n      this.moveTo(x, y);\n    },\n    canReach(fromX, fromY, toX, toY) {\n      if (fromX === toX && fromY === toY) {\n        return true;\n      }\n\n      const dx = toX > fromX ? 1 : -1;\n      const dy = toY > fromY ? 1 : -1;\n      const idxH =\n        toX > fromX\n          ? (this.lx + 1) * fromY + fromX + dx\n          : (this.lx + 1) * fromY + fromX;\n      const idxV =\n        toY > fromY ? this.lx * (fromY + dy) + fromX : this.lx * fromY + fromX;\n\n      if (\n        fromX !== toX &&\n        this.maze.bondH[idxH] &&\n        this.canReach(fromX + dx, fromY, toX, toY)\n      ) {\n        return true;\n      } else if (\n        fromY !== toY &&\n        this.maze.bondV[idxV] &&\n        this.canReach(fromX, fromY + dy, toX, toY)\n      ) {\n        return true;\n      }\n      return false;\n    },\n    moveTo(toX, toY) {\n      const fromX = this.player.x;\n      const fromY = this.player.y;\n\n      // Check if player can move\n\n      // Players can't go outside of the maze\n      if (toX < 0 || toX >= this.lx || toY < 0 || toY >= this.ly) {\n        return;\n      }\n\n      // Players can't go through the walls\n      if (!this.canReach(fromX, fromY, toX, toY)) {\n        return;\n      }\n\n      Vue.set(this, \"player\", { x: toX, y: toY });\n      if (!this.isStarted) {\n        this.isStarted = true;\n        this.$emit(\"start\");\n      }\n      if (\n        toX === this.maze.goal.x &&\n        toY === this.maze.goal.y &&\n        !this.isFinished\n      ) {\n        this.isFinished = true;\n        this.$emit(\"finish\");\n      }\n    },\n    resetMaze() {\n      const lx = this.lx;\n      const ly = this.ly;\n      const seed = this.seed++;\n      if (lx > 0 && ly > 0) {\n        const Maze = strategy[this.strategy];\n        const maze = new Maze(lx, ly, seed);\n        Vue.set(this, \"maze\", maze);\n        Vue.set(this, \"player\", { x: 0, y: 0 });\n        this.isStarted = false;\n        this.isFinished = false;\n      }\n    },\n    renderPlayer() {\n      const playerRenderer = new Renderer(\n        this.$refs.playerCanvas.getContext(\"2d\"),\n        this.cellWidth,\n        this.cellHeight,\n        this.marginLeft,\n        this.marginTop\n      );\n      const player = this.player;\n      playerRenderer.clear(this.width, this.height);\n      playerRenderer.ctx = this.$refs.playerCanvas.getContext(\"2d\");\n      playerRenderer.setColor(\"#FF9800\", \"#222\");\n      if (this.image != null) {\n        playerRenderer.drawImage(player.x, player.y, this.image);\n      } else {\n        playerRenderer.drawCircle(player.x, player.y);\n      }\n    },\n    renderGoal() {\n      const renderer = new Renderer(\n        this.$refs.goalCanvas.getContext(\"2d\"),\n        this.cellWidth,\n        this.cellHeight,\n        this.marginLeft,\n        this.marginTop\n      );\n      const maze = this.maze;\n      const goal = maze.goal;\n      renderer.ctx = this.$refs.goalCanvas.getContext(\"2d\");\n      renderer.clear(this.width, this.height);\n      renderer.setColor(\"#4CAF50\", \"#222\");\n      if (this.goalImage != null) {\n        renderer.drawImage(goal.x, goal.y, this.goalImage);\n      } else {\n        renderer.drawCircle(goal.x, goal.y);\n      }\n    },\n    // renderConguraturations() {\n    //   const effectRenderer = new Renderer(\n    //     this.$refs.effectCanvas.getContext(\"2d\"),\n    //     this.cellWidth,\n    //     this.cellHeight,\n    //     this.marginLeft,\n    //     this.marginTop\n    //   );\n    //   effectRenderer.clear(this.width, this.height);\n    //   // TODO: data\n    //   //성공 캐릭터\n    //   const texts = [\"BooYah!\", \"Wow!\", \"I did it!\", \"Woohoo!\"];\n    //   const text = texts[Math.floor(texts.length * Math.random())];\n    //   effectRenderer.drawText(text, this.player.x, this.player.y);\n    // },\n    renderMaze() {\n      this.$nextTick(() => {\n        const renderer = new Renderer(\n          this.$refs.mazeCanvas.getContext(\"2d\"),\n          this.cellWidth,\n          this.cellHeight,\n          this.marginLeft,\n          this.marginTop\n        );\n        const { lx, maze } = this;\n        const bondH = maze.bondH;\n        const bondV = maze.bondV;\n\n        renderer.clear(this.width, this.height);\n\n        renderer.setColor(null, \"#222\");\n        renderer.beginPath();\n        for (let i = 0; i < bondH.length; i++) {\n          if (bondH[i]) {\n            continue;\n          }\n          const x1 = i % (lx + 1);\n          const y1 = Math.floor(i / (lx + 1));\n          const x2 = x1;\n          const y2 = y1 + 1;\n          renderer.drawLine(x1, y1, x2, y2);\n        }\n\n        for (let j = 0; j < bondV.length; j++) {\n          if (bondV[j]) {\n            continue;\n          }\n          const x1 = j % lx;\n          const y1 = Math.floor(j / lx);\n          const x2 = x1 + 1;\n          const y2 = y1;\n          renderer.drawLine(x1, y1, x2, y2);\n        }\n        renderer.stroke();\n        this.renderPlayer();\n        this.renderGoal();\n      });\n    },\n  },\n};\n</script>\n<style>\n.mazeBtn {\n  z-index: 100;\n  cursor: pointer;\n  display: block;\n  position: relative;\n  width: 300px;\n  height: 50px;\n  line-height: 50px;\n  background: #25130f;\n  border-radius: 10px;\n  color: #c2b39a;\n  left: 22px;\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./mazeRoom.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./mazeRoom.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mazeRoom.vue?vue&type=template&id=4b8ead0b&\"\nimport script from \"./mazeRoom.vue?vue&type=script&lang=js&\"\nexport * from \"./mazeRoom.vue?vue&type=script&lang=js&\"\nimport style0 from \"./mazeRoom.vue?vue&type=style&index=0&id=4b8ead0b&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <div class=\"topImage kirkwall\"></div>\n    <div class=\"content\">\n      <p class=\"content-text mt26\">\n        커크월에 도착한 수많은 템플러들은 커크월을 뒤덮은 커다란 혼란과 절망\n        앞에 말을 잃었다. <br />과장되었을 것이라고 생각했던 소문은, 오히려\n        과소평가된 비극이었던 것이다.\n      </p>\n      <div class=\"content-dialog\">\n        <ul>\n          <li>\n            <div class=\"content-dialog-portrait\"></div>\n            <div class=\"content-dialog-text\">\n              우선 챈트리 쪽으로 가도록 하지. 지도는 갖고 있나?\n            </div>\n          </li>\n          <li>\n            <div class=\"content-dialog-portrait\"></div>\n            <div class=\"content-dialog-text\">예. 챙겨두었습니다.</div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"puzzle mt70\">\n        <div class=\"maze-container\">\n          <!-- <select v-model=\"difficulty\">\n            <option value=\"easy\">Easy</option>\n            <option value=\"normal\">Normal</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n          <select v-model=\"strategy\">\n            <option value=\"cluster\">cluster</option>\n            <option value=\"dig\">dig</option>\n          </select>\n          <div class=\"time\">{{ time }}ms</div> -->\n          <maze\n            :strategy=\"strategy\"\n            :difficulty=\"difficulty\"\n            @start=\"onStart\"\n            @finish=\"onFinish\"\n            @init=\"onInit\"\n            :style=\"mazeStyle\"\n          ></maze>\n        </div>\n      </div>\n    </div>\n    <transition>\n      <div class=\"content\" :class=\"{ hide: !showButton }\">\n        <p class=\"content-text\">\n          커크월 전반에 걸쳐 흩어진 무너진 건물의 파편.<br />\n          화마가 휩쓸고 지나간 잿더미들.<br />\n          아직 수습되지 못한 시신들.<br /><br />한차례 이곳을 휩쓸고 지나갔을\n          울음와 비명소리는 소름끼치는 적막 너머에 새겨져 있었다.<br />매캐한\n          연기의 냄새가 아직도 공기 중에 흐릿하게 남아있었다. <br />한 차례 비가\n          왔었는지 바닥은 축축하고 질척거렸다.\n        </p>\n        <div class=\"content-button mt70\">\n          <button @click=\"checkPath\">챈트리로 향한다.</button>\n        </div>\n      </div>\n    </transition>\n    <div class=\"bottomImage\"></div>\n  </div>\n</template>\n\n<script>\nimport Maze from \"@/components/01_kirkwall_harbor/puzzle/mazeRoom\";\n\nexport default {\n  components: {\n    Maze,\n  },\n  data() {\n    return {\n      mazeStyle: {\n        width: \"100%\",\n        height: \"100%\",\n      },\n      startTime: 0,\n      time: 0,\n      difficulty: \"easy\",\n      strategy: \"cluster\",\n      showButton: false,\n    };\n  },\n  methods: {\n    onStart() {\n      this.startTime = Date.now();\n    },\n    onFinish() {\n      this.showButton = true;\n    },\n    onInit() {\n      this.startTime = 0;\n    },\n    checkPath() {\n      this.$store.dispatch(\"terminateAudio\");\n      this.$router.push({ name: \"/CO-02-1\" });\n    },\n  },\n};\n</script>\n<style scoped>\n.maze-container {\n  width: 700px;\n  height: 360px;\n  margin: auto;\n  padding-bottom: 20px;\n  overflow: hidden;\n  z-index: 10;\n}\n.hide {\n  display: none;\n}\n.mazeBtn {\n  z-index: 10;\n  position: absolute;\n  cursor: pointer;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CO_01_2_kirkwall.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CO_01_2_kirkwall.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CO_01_2_kirkwall.vue?vue&type=template&id=0b746404&scoped=true&\"\nimport script from \"./CO_01_2_kirkwall.vue?vue&type=script&lang=js&\"\nexport * from \"./CO_01_2_kirkwall.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CO_01_2_kirkwall.vue?vue&type=style&index=0&id=0b746404&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0b746404\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","style","mazeStyle","attrs","strategy","difficulty","on","onStart","onFinish","onInit","class","hide","showButton","_v","checkPath","staticRenderFns","resetMaze","onKeyUp","ref","width","height","goalStyle","playerStyle","onTouchStart","onTouchMove","onTouchEnd","onMouseMove","cache","dotStyle","_e","Maze","constructor","lx","ly","bondHSize","bondVSize","pointSize","bondH","Array","i","length","bondV","point","goal","x","y","makeMaze","getClusterIndex","index","connect","ix1","iy1","ix2","iy2","i1","i2","makeMazeSub","rate","iy","ix","rand","Math","random","isOpenArr","cells","push","floor","c","pop","direction","getDirectionCandidate","isDeadEnd","dest","getNeighbor","getRandomDirection","north","south","west","east","isOpen","directionNo","filter","probability","sum","Error","n","k","p","Renderer","ctx","unitWidth","unitHeight","offsetLeft","offsetTop","wallWidth","clear","w","h","clearRect","setColor","fill","stroke","fillStyle","strokeStyle","beginPath","drawImage","image","scaleX","scaleY","cx","cy","save","scale","imageSmoothingEnabled","restore","drawCircle","r","min","arc","PI","drawLine","x1","y1","x2","y2","fromX","fromY","toX","toY","moveTo","lineTo","drawText","text","left","top","fillText","dig","Maze2","cluster","data","dotPos","offsetX","offsetY","margin","goalImage","maze","player","id","isFinished","seed","Date","now","props","default","type","String","imagePath","goalImagePath","computed","marginTop","cellHeight","marginLeft","cellWidth","max","opacity","display","position","backgroundColor","borderRadius","border","mounted","$el","offsetHeight","offsetWidth","Image","addEventListener","src","window","watch","renderMaze","$emit","renderPlayer","renderGoal","methods","event","preventDefault","stopPropagation","touch","touches","rect","avatorPosition","originalPosition","Vue","target","getBoundingClientRect","clientX","clientY","pos","avatorPos","originalPos","handleMove","dx","dy","abs","moveBy","keyCode","goLeft","goUp","goRight","goDown","canReach","idxH","idxV","isStarted","playerRenderer","$refs","playerCanvas","getContext","renderer","goalCanvas","$nextTick","mazeCanvas","j","component","components","startTime","time","$store","dispatch","$router","name"],"sourceRoot":""}